#!/usr/bin/env zsh

prog_name=$0
target_spec=$1

function usage() {
  echo "$prog_name <target_spec>"
  echo "Sets up my dotfiles on the remote host"
}

if [[ $# -ne 1 ]]; then
  echo "Expected a single argument"
  usage
  exit 1
fi

SCRIPT_DIR=$(unset CDPATH; cd "$(dirname "$0")" > /dev/null; pwd -P)

export GIT_DIR=${SCRIPT_DIR}/../.git

if [ -z "$(git status --porcelain)" ]; then
  echo "Git directory is clean."
else
  echo "Git directory is dirty."
  exit 1
fi

LOCAL_BRANCH=$(git rev-parse HEAD)
REMOTE_BRANCH=$(git rev-parse '@{u}')
if [ "$LOCAL_BRANCH" != "$REMOTE_BRANCH" ]; then
  echo "Unpushed commits detected."
  exit 1
fi

original_url=$(git remote get-url origin)

# The first connection must already include agent forwarding.
# Reset all multiplexed connection to be sure.
ssh -O exit "$target_spec"
ssh -tA "$target_spec" "/bin/true"
rsync ~/./.gitconfig_credentials "$target_spec:~/.gitconfig_credentials"
rsync ~/./.color/current "$target_spec:~/.color/current" --rsync-path "mkdir -p ~/.color && rsync"
# Ensure that /nix store is on persistent volume
ssh -tA "$target_spec" "git clone '$original_url' ~/.dotfiles; cd ~/.dotfiles && bin/nix-bindmount && DOTFILES_PROFILE=minimal ./script/bootstrap"
ssh -tA "$target_spec" "mkdir -p /etc/ssh/sshd_config.d/ && echo 'StreamLocalBindUnlink yes' > /etc/ssh/sshd_config.d/localbindunlink.conf && sudo systemctl reload sshd"
echo "Done. Final cleanup."
